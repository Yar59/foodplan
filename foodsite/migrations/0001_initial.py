# Generated by Django 4.1.7 on 2023-03-14 18:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('price', models.FloatField(default=0, verbose_name='Ориентировочная цена в руб.')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='some_user', max_length=250)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=12)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('not_used_ingr', models.ManyToManyField(blank=True, null=True, related_name='not_for_users', to='foodsite.ingredients', verbose_name='Блюда с какими ингредиентами не предлагать')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/')),
                ('dislike', models.ManyToManyField(blank=True, related_name='disliked_dish', to='foodsite.user', verbose_name='Кто дизлайкнул')),
                ('ingredients', models.ManyToManyField(related_name='dishes', to='foodsite.ingredients', verbose_name='Какие ингридиенты используются')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_dish', to='foodsite.user', verbose_name='Кто лайкнул')),
            ],
        ),
    ]
